

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 11 12:23:06 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F883 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124                           
   125                           	psect	nvBANK0
   126  002E                     __pnvBANK0:	
   127  002E                     _freq:	
   128  002E                     	ds	4
   129  001B                     _CCPR2L	set	27
   130  0015                     _CCPR1L	set	21
   131  0019                     _TXREG	set	25
   132  0018                     _RCSTAbits	set	24
   133  0091                     _T2CKPS1	set	145
   134  0090                     _T2CKPS0	set	144
   135  00EA                     _CCP2M2	set	234
   136  00EB                     _CCP2M3	set	235
   137  0092                     _TMR2ON	set	146
   138  00BA                     _CCP1M2	set	186
   139  00BB                     _CCP1M3	set	187
   140  00EC                     _CCP2Y	set	236
   141  00ED                     _CCP2X	set	237
   142  00BC                     _CCP1Y	set	188
   143  00BD                     _CCP1X	set	189
   144  0092                     _PR2	set	146
   145  0098                     _TXSTAbits	set	152
   146  0087                     _TRISCbits	set	135
   147  0085                     _TRISAbits	set	133
   148  0439                     _TRISC1	set	1081
   149  043A                     _TRISC2	set	1082
   150  04C1                     _TRMT	set	1217
   151  0187                     _BAUDCTLbits	set	391
   152  0188                     _ANSELbits	set	392
   153                           
   154                           ; #config settings
   155  0000                     
   156                           	psect	cinit
   157  07FD                     start_initialization:	
   158  07FD                     __initialization:	
   159  07FD                     end_of_initialization:	
   160                           ;End of C runtime variable initialization code
   161                           
   162  07FD                     __end_of__initialization:	
   163  07FD  0183               	clrf	3
   164  07FE  118A  2F30         	ljmp	_main	;jump to C main() function
   165                           
   166                           	psect	cstackCOMMON
   167  0070                     __pcstackCOMMON:	
   168  0070                     ?_main:	
   169  0070                     ?___aldiv:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0070                     ___aldiv@divisor:	
   173                           ; 4 bytes @ 0x0
   174                           
   175                           
   176                           ; 4 bytes @ 0x0
   177  0070                     	ds	4
   178  0074                     ___aldiv@dividend:	
   179                           
   180                           ; 4 bytes @ 0x4
   181  0074                     	ds	4
   182  0078                     ??___aldiv:	
   183                           
   184                           ; 1 bytes @ 0x8
   185  0078                     	ds	1
   186  0079                     ??_PWM1_Init:	
   187  0079                     ??_PWM2_Init:	
   188                           ; 1 bytes @ 0x9
   189                           
   190                           
   191                           ; 1 bytes @ 0x9
   192  0079                     	ds	4
   193  007D                     ??_main:	
   194                           
   195                           	psect	cstackBANK0
   196  0020                     __pcstackBANK0:	
   197                           ; 1 bytes @ 0xD
   198                           
   199  0020                     ___aldiv@counter:	
   200                           
   201                           ; 1 bytes @ 0x0
   202  0020                     	ds	1
   203  0021                     ___aldiv@sign:	
   204                           
   205                           ; 1 bytes @ 0x1
   206  0021                     	ds	1
   207  0022                     ___aldiv@quotient:	
   208                           
   209                           ; 4 bytes @ 0x2
   210  0022                     	ds	4
   211  0026                     ?_PWM1_Init:	
   212  0026                     ?_PWM2_Init:	
   213                           ; 2 bytes @ 0x6
   214                           
   215  0026                     PWM1_Init@fre:	
   216                           ; 2 bytes @ 0x6
   217                           
   218  0026                     PWM2_Init@fre:	
   219                           ; 4 bytes @ 0x6
   220                           
   221                           
   222                           ; 4 bytes @ 0x6
   223  0026                     	ds	4
   224  002A                     main@i:	
   225                           
   226                           ; 2 bytes @ 0xA
   227  002A                     	ds	2
   228  002C                     main@RB7_flag:	
   229                           
   230                           ; 1 bytes @ 0xC
   231  002C                     	ds	1
   232  002D                     main@RB6_flag:	
   233                           
   234                           ; 1 bytes @ 0xD
   235  002D                     	ds	1
   236                           
   237                           	psect	maintext
   238  0730                     __pmaintext:	
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 40 in file "temp_1.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;  i               2   10[BANK0 ] unsigned int 
   249 ;;  RB6_flag        1   13[BANK0 ] unsigned char 
   250 ;;  RB7_flag        1   12[BANK0 ] unsigned char 
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0, pclath, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : B00/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   260 ;;      Params:         0       0       0       0
   261 ;;      Locals:         0       4       0       0
   262 ;;      Temps:          0       0       0       0
   263 ;;      Totals:         0       4       0       0
   264 ;;Total ram usage:        4 bytes
   265 ;; Hardware stack levels required when called:    2
   266 ;; This function calls:
   267 ;;		_PWM1_Init
   268 ;;		_PWM2_Init
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           
   275                           ;psect for function _main
   276  0730                     _main:	
   277                           
   278                           ;temp_1.c: 42: unsigned int i = 0;
   279                           
   280                           ;incstack = 0
   281                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   282  0730  1283               	bcf	3,5	;RP0=0, select bank0
   283  0731  1303               	bcf	3,6	;RP1=0, select bank0
   284  0732  01AA               	clrf	main@i
   285  0733  01AB               	clrf	main@i+1
   286                           
   287                           ;temp_1.c: 44: bool RB7_flag = 1;
   288  0734  01AC               	clrf	main@RB7_flag
   289  0735  0AAC               	incf	main@RB7_flag,f
   290                           
   291                           ;temp_1.c: 45: bool RB6_flag = 1;
   292  0736  01AD               	clrf	main@RB6_flag
   293  0737  0AAD               	incf	main@RB6_flag,f
   294                           
   295                           ;temp_1.c: 47: PWM1_Init(5000);
   296  0738  3000               	movlw	0
   297  0739  00A9               	movwf	PWM1_Init@fre+3
   298  073A  3000               	movlw	0
   299  073B  00A8               	movwf	PWM1_Init@fre+2
   300  073C  3013               	movlw	19
   301  073D  00A7               	movwf	PWM1_Init@fre+1
   302  073E  3088               	movlw	136
   303  073F  00A6               	movwf	PWM1_Init@fre
   304  0740  118A  26B4  118A   	fcall	_PWM1_Init
   305                           
   306                           ;temp_1.c: 48: PWM2_Init(5000);
   307  0743  3000               	movlw	0
   308  0744  1283               	bcf	3,5	;RP0=0, select bank0
   309  0745  1303               	bcf	3,6	;RP1=0, select bank0
   310  0746  00A9               	movwf	PWM2_Init@fre+3
   311  0747  3000               	movlw	0
   312  0748  00A8               	movwf	PWM2_Init@fre+2
   313  0749  3013               	movlw	19
   314  074A  00A7               	movwf	PWM2_Init@fre+1
   315  074B  3088               	movlw	136
   316  074C  00A6               	movwf	PWM2_Init@fre
   317  074D  118A  26F2  118A   	fcall	_PWM2_Init
   318                           
   319                           ;temp_1.c: 50: ANSELbits.ANS1 = 1;
   320  0750  1683               	bsf	3,5	;RP0=1, select bank3
   321  0751  1703               	bsf	3,6	;RP1=1, select bank3
   322  0752  1488               	bsf	8,1	;volatile
   323                           
   324                           ;temp_1.c: 52: TRISAbits.TRISA1 = 1;
   325  0753  1683               	bsf	3,5	;RP0=1, select bank1
   326  0754  1303               	bcf	3,6	;RP1=0, select bank1
   327  0755  1485               	bsf	5,1	;volatile
   328                           
   329                           ;temp_1.c: 53: TRISCbits.TRISC1 = 0;
   330  0756  1087               	bcf	7,1	;volatile
   331                           
   332                           ;temp_1.c: 54: TRISCbits.TRISC2 = 0;
   333  0757  1107               	bcf	7,2	;volatile
   334                           
   335                           ;temp_1.c: 57: TXSTAbits.TXEN = 1;
   336  0758  1698               	bsf	24,5	;volatile
   337                           
   338                           ;temp_1.c: 58: TXSTAbits.SYNC = 0;
   339  0759  1218               	bcf	24,4	;volatile
   340                           
   341                           ;temp_1.c: 59: RCSTAbits.SPEN = 1;
   342  075A  1283               	bcf	3,5	;RP0=0, select bank0
   343  075B  1303               	bcf	3,6	;RP1=0, select bank0
   344  075C  1798               	bsf	24,7	;volatile
   345                           
   346                           ;temp_1.c: 60: BAUDCTLbits.BRG16 = 1;
   347  075D  1683               	bsf	3,5	;RP0=1, select bank3
   348  075E  1703               	bsf	3,6	;RP1=1, select bank3
   349  075F  1587               	bsf	7,3	;volatile
   350                           
   351                           ;temp_1.c: 61: TXSTAbits.BRGH = 1;
   352  0760  1683               	bsf	3,5	;RP0=1, select bank1
   353  0761  1303               	bcf	3,6	;RP1=0, select bank1
   354  0762  1518               	bsf	24,2	;volatile
   355                           
   356                           ;temp_1.c: 63: TXREG = 0;
   357  0763  1283               	bcf	3,5	;RP0=0, select bank0
   358  0764  1303               	bcf	3,6	;RP1=0, select bank0
   359  0765  0199               	clrf	25	;volatile
   360  0766                     l744:	
   361                           ;temp_1.c: 65: while(1){
   362                           
   363                           
   364                           ;temp_1.c: 66: TXREG = 'A';
   365  0766  3041               	movlw	65
   366  0767  1283               	bcf	3,5	;RP0=0, select bank0
   367  0768  0099               	movwf	25	;volatile
   368  0769                     l60:	
   369                           ;temp_1.c: 67: while(!TRMT);
   370                           
   371  0769  1683               	bsf	3,5	;RP0=1, select bank1
   372  076A  1303               	bcf	3,6	;RP1=0, select bank1
   373  076B  1898               	btfsc	24,1	;volatile
   374  076C  2F66               	goto	l744
   375  076D  2F69               	goto	l60
   376  076E                     __end_of_main:	
   377                           
   378                           	psect	text1
   379  06F2                     __ptext1:	
   380 ;; *************** function _PWM2_Init *****************
   381 ;; Defined at:
   382 ;;		line 227 in file "temp_1.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;  fre             4    6[BANK0 ] long 
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  2    6[BANK0 ] int 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   396 ;;      Params:         0       4       0       0
   397 ;;      Locals:         0       0       0       0
   398 ;;      Temps:          4       0       0       0
   399 ;;      Totals:         4       4       0       0
   400 ;;Total ram usage:        8 bytes
   401 ;; Hardware stack levels used:    1
   402 ;; Hardware stack levels required when called:    1
   403 ;; This function calls:
   404 ;;		___aldiv
   405 ;; This function is called by:
   406 ;;		_main
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           
   411                           ;psect for function _PWM2_Init
   412  06F2                     _PWM2_Init:	
   413                           
   414                           ;temp_1.c: 228: PR2 = (8000000/(fre*4*4)) - 1;
   415                           
   416                           ;incstack = 0
   417                           ; Regs used in _PWM2_Init: [wreg+status,2+status,0+pclath+cstack]
   418  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   419  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   420  06F4  0826               	movf	PWM2_Init@fre,w
   421  06F5  00F9               	movwf	??_PWM2_Init
   422  06F6  0827               	movf	PWM2_Init@fre+1,w
   423  06F7  00FA               	movwf	??_PWM2_Init+1
   424  06F8  0828               	movf	PWM2_Init@fre+2,w
   425  06F9  00FB               	movwf	??_PWM2_Init+2
   426  06FA  0829               	movf	PWM2_Init@fre+3,w
   427  06FB  00FC               	movwf	??_PWM2_Init+3
   428  06FC  3002               	movlw	2
   429  06FD                     u355:	
   430  06FD  1003               	clrc
   431  06FE  0DF9               	rlf	??_PWM2_Init,f
   432  06FF  0DFA               	rlf	??_PWM2_Init+1,f
   433  0700  0DFB               	rlf	??_PWM2_Init+2,f
   434  0701  0DFC               	rlf	??_PWM2_Init+3,f
   435  0702  3EFF               	addlw	-1
   436  0703  1D03               	skipz
   437  0704  2EFD               	goto	u355
   438  0705  3002               	movlw	2
   439  0706                     u365:	
   440  0706  1003               	clrc
   441  0707  0DF9               	rlf	??_PWM2_Init,f
   442  0708  0DFA               	rlf	??_PWM2_Init+1,f
   443  0709  0DFB               	rlf	??_PWM2_Init+2,f
   444  070A  0DFC               	rlf	??_PWM2_Init+3,f
   445  070B  3EFF               	addlw	-1
   446  070C  1D03               	skipz
   447  070D  2F06               	goto	u365
   448  070E  087C               	movf	??_PWM2_Init+3,w
   449  070F  00F3               	movwf	___aldiv@divisor+3
   450  0710  087B               	movf	??_PWM2_Init+2,w
   451  0711  00F2               	movwf	___aldiv@divisor+2
   452  0712  087A               	movf	??_PWM2_Init+1,w
   453  0713  00F1               	movwf	___aldiv@divisor+1
   454  0714  0879               	movf	??_PWM2_Init,w
   455  0715  00F0               	movwf	___aldiv@divisor
   456  0716  3000               	movlw	0
   457  0717  00F7               	movwf	___aldiv@dividend+3
   458  0718  307A               	movlw	122
   459  0719  00F6               	movwf	___aldiv@dividend+2
   460  071A  3012               	movlw	18
   461  071B  00F5               	movwf	___aldiv@dividend+1
   462  071C  3000               	movlw	0
   463  071D  00F4               	movwf	___aldiv@dividend
   464  071E  118A  276E         	fcall	___aldiv
   465  0720  0870               	movf	?___aldiv,w
   466  0721  3EFF               	addlw	255
   467  0722  1683               	bsf	3,5	;RP0=1, select bank1
   468  0723  1303               	bcf	3,6	;RP1=0, select bank1
   469  0724  0092               	movwf	18	;volatile
   470                           
   471                           ;temp_1.c: 229: freq = fre;
   472  0725  1283               	bcf	3,5	;RP0=0, select bank0
   473  0726  1303               	bcf	3,6	;RP1=0, select bank0
   474  0727  0829               	movf	PWM2_Init@fre+3,w
   475  0728  00B1               	movwf	_freq+3
   476  0729  0828               	movf	PWM2_Init@fre+2,w
   477  072A  00B0               	movwf	_freq+2
   478  072B  0827               	movf	PWM2_Init@fre+1,w
   479  072C  00AF               	movwf	_freq+1
   480  072D  0826               	movf	PWM2_Init@fre,w
   481  072E  00AE               	movwf	_freq
   482  072F  0008               	return
   483  0730                     __end_of_PWM2_Init:	
   484                           
   485                           	psect	text2
   486  06B4                     __ptext2:	
   487 ;; *************** function _PWM1_Init *****************
   488 ;; Defined at:
   489 ;;		line 222 in file "temp_1.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;  fre             4    6[BANK0 ] long 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  2    6[BANK0 ] int 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   503 ;;      Params:         0       4       0       0
   504 ;;      Locals:         0       0       0       0
   505 ;;      Temps:          4       0       0       0
   506 ;;      Totals:         4       4       0       0
   507 ;;Total ram usage:        8 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; Hardware stack levels required when called:    1
   510 ;; This function calls:
   511 ;;		___aldiv
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           
   518                           ;psect for function _PWM1_Init
   519  06B4                     _PWM1_Init:	
   520                           
   521                           ;temp_1.c: 223: PR2 = (8000000/(fre*4*4)) - 1;
   522                           
   523                           ;incstack = 0
   524                           ; Regs used in _PWM1_Init: [wreg+status,2+status,0+pclath+cstack]
   525  06B4  1283               	bcf	3,5	;RP0=0, select bank0
   526  06B5  1303               	bcf	3,6	;RP1=0, select bank0
   527  06B6  0826               	movf	PWM1_Init@fre,w
   528  06B7  00F9               	movwf	??_PWM1_Init
   529  06B8  0827               	movf	PWM1_Init@fre+1,w
   530  06B9  00FA               	movwf	??_PWM1_Init+1
   531  06BA  0828               	movf	PWM1_Init@fre+2,w
   532  06BB  00FB               	movwf	??_PWM1_Init+2
   533  06BC  0829               	movf	PWM1_Init@fre+3,w
   534  06BD  00FC               	movwf	??_PWM1_Init+3
   535  06BE  3002               	movlw	2
   536  06BF                     u335:	
   537  06BF  1003               	clrc
   538  06C0  0DF9               	rlf	??_PWM1_Init,f
   539  06C1  0DFA               	rlf	??_PWM1_Init+1,f
   540  06C2  0DFB               	rlf	??_PWM1_Init+2,f
   541  06C3  0DFC               	rlf	??_PWM1_Init+3,f
   542  06C4  3EFF               	addlw	-1
   543  06C5  1D03               	skipz
   544  06C6  2EBF               	goto	u335
   545  06C7  3002               	movlw	2
   546  06C8                     u345:	
   547  06C8  1003               	clrc
   548  06C9  0DF9               	rlf	??_PWM1_Init,f
   549  06CA  0DFA               	rlf	??_PWM1_Init+1,f
   550  06CB  0DFB               	rlf	??_PWM1_Init+2,f
   551  06CC  0DFC               	rlf	??_PWM1_Init+3,f
   552  06CD  3EFF               	addlw	-1
   553  06CE  1D03               	skipz
   554  06CF  2EC8               	goto	u345
   555  06D0  087C               	movf	??_PWM1_Init+3,w
   556  06D1  00F3               	movwf	___aldiv@divisor+3
   557  06D2  087B               	movf	??_PWM1_Init+2,w
   558  06D3  00F2               	movwf	___aldiv@divisor+2
   559  06D4  087A               	movf	??_PWM1_Init+1,w
   560  06D5  00F1               	movwf	___aldiv@divisor+1
   561  06D6  0879               	movf	??_PWM1_Init,w
   562  06D7  00F0               	movwf	___aldiv@divisor
   563  06D8  3000               	movlw	0
   564  06D9  00F7               	movwf	___aldiv@dividend+3
   565  06DA  307A               	movlw	122
   566  06DB  00F6               	movwf	___aldiv@dividend+2
   567  06DC  3012               	movlw	18
   568  06DD  00F5               	movwf	___aldiv@dividend+1
   569  06DE  3000               	movlw	0
   570  06DF  00F4               	movwf	___aldiv@dividend
   571  06E0  118A  276E         	fcall	___aldiv
   572  06E2  0870               	movf	?___aldiv,w
   573  06E3  3EFF               	addlw	255
   574  06E4  1683               	bsf	3,5	;RP0=1, select bank1
   575  06E5  1303               	bcf	3,6	;RP1=0, select bank1
   576  06E6  0092               	movwf	18	;volatile
   577                           
   578                           ;temp_1.c: 224: freq = fre;
   579  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   580  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   581  06E9  0829               	movf	PWM1_Init@fre+3,w
   582  06EA  00B1               	movwf	_freq+3
   583  06EB  0828               	movf	PWM1_Init@fre+2,w
   584  06EC  00B0               	movwf	_freq+2
   585  06ED  0827               	movf	PWM1_Init@fre+1,w
   586  06EE  00AF               	movwf	_freq+1
   587  06EF  0826               	movf	PWM1_Init@fre,w
   588  06F0  00AE               	movwf	_freq
   589  06F1  0008               	return
   590  06F2                     __end_of_PWM1_Init:	
   591                           
   592                           	psect	text3
   593  076E                     __ptext3:	
   594 ;; *************** function ___aldiv *****************
   595 ;; Defined at:
   596 ;;		line 6 in file "/Applications/microchip/xc8/v1.45/sources/common/aldiv.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  divisor         4    0[COMMON] long 
   599 ;;  dividend        4    4[COMMON] long 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  quotient        4    2[BANK0 ] long 
   602 ;;  sign            1    1[BANK0 ] unsigned char 
   603 ;;  counter         1    0[BANK0 ] unsigned char 
   604 ;; Return value:  Size  Location     Type
   605 ;;                  4    0[COMMON] long 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   613 ;;      Params:         8       0       0       0
   614 ;;      Locals:         0       6       0       0
   615 ;;      Temps:          1       0       0       0
   616 ;;      Totals:         9       6       0       0
   617 ;;Total ram usage:       15 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_PWM1_Init
   623 ;;		_PWM2_Init
   624 ;;		_PWM_Max_Duty
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           
   629                           ;psect for function ___aldiv
   630  076E                     ___aldiv:	
   631                           
   632                           ;incstack = 0
   633                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   634  076E  1283               	bcf	3,5	;RP0=0, select bank0
   635  076F  1303               	bcf	3,6	;RP1=0, select bank0
   636  0770  01A1               	clrf	___aldiv@sign
   637  0771  1FF3               	btfss	___aldiv@divisor+3,7
   638  0772  2F80               	goto	l233
   639  0773  09F0               	comf	___aldiv@divisor,f
   640  0774  09F1               	comf	___aldiv@divisor+1,f
   641  0775  09F2               	comf	___aldiv@divisor+2,f
   642  0776  09F3               	comf	___aldiv@divisor+3,f
   643  0777  0AF0               	incf	___aldiv@divisor,f
   644  0778  1903               	skipnz
   645  0779  0AF1               	incf	___aldiv@divisor+1,f
   646  077A  1903               	skipnz
   647  077B  0AF2               	incf	___aldiv@divisor+2,f
   648  077C  1903               	skipnz
   649  077D  0AF3               	incf	___aldiv@divisor+3,f
   650  077E  01A1               	clrf	___aldiv@sign
   651  077F  0AA1               	incf	___aldiv@sign,f
   652  0780                     l233:	
   653  0780  1FF7               	btfss	___aldiv@dividend+3,7
   654  0781  2F91               	goto	l674
   655  0782  09F4               	comf	___aldiv@dividend,f
   656  0783  09F5               	comf	___aldiv@dividend+1,f
   657  0784  09F6               	comf	___aldiv@dividend+2,f
   658  0785  09F7               	comf	___aldiv@dividend+3,f
   659  0786  0AF4               	incf	___aldiv@dividend,f
   660  0787  1903               	skipnz
   661  0788  0AF5               	incf	___aldiv@dividend+1,f
   662  0789  1903               	skipnz
   663  078A  0AF6               	incf	___aldiv@dividend+2,f
   664  078B  1903               	skipnz
   665  078C  0AF7               	incf	___aldiv@dividend+3,f
   666  078D  3001               	movlw	1
   667  078E  00F8               	movwf	??___aldiv
   668  078F  0878               	movf	??___aldiv,w
   669  0790  06A1               	xorwf	___aldiv@sign,f
   670  0791                     l674:	
   671  0791  3000               	movlw	0
   672  0792  00A5               	movwf	___aldiv@quotient+3
   673  0793  3000               	movlw	0
   674  0794  00A4               	movwf	___aldiv@quotient+2
   675  0795  3000               	movlw	0
   676  0796  00A3               	movwf	___aldiv@quotient+1
   677  0797  3000               	movlw	0
   678  0798  00A2               	movwf	___aldiv@quotient
   679  0799  0873               	movf	___aldiv@divisor+3,w
   680  079A  0472               	iorwf	___aldiv@divisor+2,w
   681  079B  0471               	iorwf	___aldiv@divisor+1,w
   682  079C  0470               	iorwf	___aldiv@divisor,w
   683  079D  1903               	skipnz
   684  079E  2FE6               	goto	l696
   685  079F  01A0               	clrf	___aldiv@counter
   686  07A0  0AA0               	incf	___aldiv@counter,f
   687  07A1                     l682:	
   688  07A1  1BF3               	btfsc	___aldiv@divisor+3,7
   689  07A2  2FB1               	goto	l684
   690  07A3  3001               	movlw	1
   691  07A4  00F8               	movwf	??___aldiv
   692  07A5                     u265:	
   693  07A5  1003               	clrc
   694  07A6  0DF0               	rlf	___aldiv@divisor,f
   695  07A7  0DF1               	rlf	___aldiv@divisor+1,f
   696  07A8  0DF2               	rlf	___aldiv@divisor+2,f
   697  07A9  0DF3               	rlf	___aldiv@divisor+3,f
   698  07AA  0BF8               	decfsz	??___aldiv,f
   699  07AB  2FA5               	goto	u265
   700  07AC  3001               	movlw	1
   701  07AD  00F8               	movwf	??___aldiv
   702  07AE  0878               	movf	??___aldiv,w
   703  07AF  07A0               	addwf	___aldiv@counter,f
   704  07B0  2FA1               	goto	l682
   705  07B1                     l684:	
   706  07B1  3001               	movlw	1
   707  07B2  00F8               	movwf	??___aldiv
   708  07B3                     u285:	
   709  07B3  1003               	clrc
   710  07B4  0DA2               	rlf	___aldiv@quotient,f
   711  07B5  0DA3               	rlf	___aldiv@quotient+1,f
   712  07B6  0DA4               	rlf	___aldiv@quotient+2,f
   713  07B7  0DA5               	rlf	___aldiv@quotient+3,f
   714  07B8  0BF8               	decfsz	??___aldiv,f
   715  07B9  2FB3               	goto	u285
   716  07BA  0873               	movf	___aldiv@divisor+3,w
   717  07BB  0277               	subwf	___aldiv@dividend+3,w
   718  07BC  1D03               	skipz
   719  07BD  2FC8               	goto	u295
   720  07BE  0872               	movf	___aldiv@divisor+2,w
   721  07BF  0276               	subwf	___aldiv@dividend+2,w
   722  07C0  1D03               	skipz
   723  07C1  2FC8               	goto	u295
   724  07C2  0871               	movf	___aldiv@divisor+1,w
   725  07C3  0275               	subwf	___aldiv@dividend+1,w
   726  07C4  1D03               	skipz
   727  07C5  2FC8               	goto	u295
   728  07C6  0870               	movf	___aldiv@divisor,w
   729  07C7  0274               	subwf	___aldiv@dividend,w
   730  07C8                     u295:	
   731  07C8  1C03               	skipc
   732  07C9  2FD9               	goto	l692
   733  07CA  0870               	movf	___aldiv@divisor,w
   734  07CB  02F4               	subwf	___aldiv@dividend,f
   735  07CC  0871               	movf	___aldiv@divisor+1,w
   736  07CD  1C03               	skipc
   737  07CE  0F71               	incfsz	___aldiv@divisor+1,w
   738  07CF  02F5               	subwf	___aldiv@dividend+1,f
   739  07D0  0872               	movf	___aldiv@divisor+2,w
   740  07D1  1C03               	skipc
   741  07D2  0F72               	incfsz	___aldiv@divisor+2,w
   742  07D3  02F6               	subwf	___aldiv@dividend+2,f
   743  07D4  0873               	movf	___aldiv@divisor+3,w
   744  07D5  1C03               	skipc
   745  07D6  0F73               	incfsz	___aldiv@divisor+3,w
   746  07D7  02F7               	subwf	___aldiv@dividend+3,f
   747  07D8  1422               	bsf	___aldiv@quotient,0
   748  07D9                     l692:	
   749  07D9  3001               	movlw	1
   750  07DA                     u305:	
   751  07DA  1003               	clrc
   752  07DB  0CF3               	rrf	___aldiv@divisor+3,f
   753  07DC  0CF2               	rrf	___aldiv@divisor+2,f
   754  07DD  0CF1               	rrf	___aldiv@divisor+1,f
   755  07DE  0CF0               	rrf	___aldiv@divisor,f
   756  07DF  3EFF               	addlw	-1
   757  07E0  1D03               	skipz
   758  07E1  2FDA               	goto	u305
   759  07E2  3001               	movlw	1
   760  07E3  02A0               	subwf	___aldiv@counter,f
   761  07E4  1D03               	btfss	3,2
   762  07E5  2FB1               	goto	l684
   763  07E6                     l696:	
   764  07E6  0821               	movf	___aldiv@sign,w
   765  07E7  1903               	btfsc	3,2
   766  07E8  2FF4               	goto	l700
   767  07E9  09A2               	comf	___aldiv@quotient,f
   768  07EA  09A3               	comf	___aldiv@quotient+1,f
   769  07EB  09A4               	comf	___aldiv@quotient+2,f
   770  07EC  09A5               	comf	___aldiv@quotient+3,f
   771  07ED  0AA2               	incf	___aldiv@quotient,f
   772  07EE  1903               	skipnz
   773  07EF  0AA3               	incf	___aldiv@quotient+1,f
   774  07F0  1903               	skipnz
   775  07F1  0AA4               	incf	___aldiv@quotient+2,f
   776  07F2  1903               	skipnz
   777  07F3  0AA5               	incf	___aldiv@quotient+3,f
   778  07F4                     l700:	
   779  07F4  0825               	movf	___aldiv@quotient+3,w
   780  07F5  00F3               	movwf	?___aldiv+3
   781  07F6  0824               	movf	___aldiv@quotient+2,w
   782  07F7  00F2               	movwf	?___aldiv+2
   783  07F8  0823               	movf	___aldiv@quotient+1,w
   784  07F9  00F1               	movwf	?___aldiv+1
   785  07FA  0822               	movf	___aldiv@quotient,w
   786  07FB  00F0               	movwf	?___aldiv
   787  07FC  0008               	return
   788  07FD                     __end_of___aldiv:	
   789  007E                     btemp	set	126	;btemp
   790  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     14      18
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM1_Init
    _main->_PWM2_Init
    _PWM2_Init->___aldiv
    _PWM1_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_PWM1_Init
    _main->_PWM2_Init
    _PWM2_Init->___aldiv
    _PWM1_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1433
                                             10 BANK0      4     4      0
                          _PWM1_Init
                          _PWM2_Init
 ---------------------------------------------------------------------------------
 (1) _PWM2_Init                                            8     4      4     715
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     4      4     715
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     618
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Init
     ___aldiv
   _PWM2_Init
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      E      12       3       22.5%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      1F       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      1F      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 11 12:23:06 2018

            __CFG_CP$OFF 0000                       l60 0769              __CFG_LVP$ON 0000  
                    l233 0780                      l700 07F4                      l744 0766  
                    l682 07A1                      l674 0791                      l692 07D9  
                    l684 07B1                      l696 07E6                      u305 07DA  
                    _PR2 0092                      u335 06BF                      u265 07A5  
                    u345 06C8             __CFG_CPD$OFF 0000                      u355 06FD  
                    u285 07B3                      u365 0706                      u295 07C8  
           __CFG_IESO$ON 0000             __CFG_FOSC$HS 0000                     _TRMT 04C1  
           __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000                     _main 0730  
                   _freq 002E                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0000            __CFG_MCLRE$ON 0000          __end_of___aldiv 07FD  
                  ?_main 0070                    _CCP1X 00BD                    _CCP1Y 00BC  
                  _CCP2X 00ED                    _CCP2Y 00EC            __CFG_WDTE$OFF 0000  
                  _TXREG 0019       __size_of_PWM1_Init 003E       __size_of_PWM2_Init 003E  
                  main@i 002A                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_main 076E                   ??_main 007D  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCP2M2 00EA  
                 _CCP2M3 00EB                   _CCPR1L 0015                   _CCPR2L 001B  
                 _TMR2ON 0092                   _TRISC1 0439                   _TRISC2 043A  
         __CFG_PWRTE$OFF 0000        __end_of_PWM1_Init 06F2        __end_of_PWM2_Init 0730  
              ??___aldiv 0078  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pmaintext 0730                  _T2CKPS0 0090                  _T2CKPS1 0091  
                ___aldiv 076E                _ANSELbits 0188                  __ptext1 06F2  
                __ptext2 06B4                  __ptext3 076E         ___aldiv@dividend 0074  
   end_of_initialization 07FD                _RCSTAbits 0018         ___aldiv@quotient 0022  
              _PWM1_Init 06B4                _PWM2_Init 06F2                _TRISAbits 0085  
              _TRISCbits 0087                _TXSTAbits 0098               ?_PWM1_Init 0026  
            _BAUDCTLbits 0187               ?_PWM2_Init 0026      start_initialization 07FD  
              ___latbits 0001            __pcstackBANK0 0020                __pnvBANK0 002E  
               ?___aldiv 0070              ??_PWM1_Init 0079              ??_PWM2_Init 0079  
        ___aldiv@divisor 0070          ___aldiv@counter 0020         __size_of___aldiv 008F  
      __CFG_BOR4V$BOR40V 0000            __size_of_main 003E             PWM1_Init@fre 0026  
           PWM2_Init@fre 0026             ___aldiv@sign 0021             main@RB6_flag 002D  
           main@RB7_flag 002C  
